server {
    listen 80 default_server;
    listen [::]:80;

    # 可以配置domain
    server_name localhost;

    # 设置监听函数listen()最多允许多少网络连接同时处于挂起状态，在FreeBSD中默认为-1，其他平台默认为511
    # backlog=number = 511;

    # 标识符，使用独立的bind()处理此address:port；一般情况下，对于端口相同而IP地址不同的多个连接，Nginx服务器将只使用一个监听命令，并使用bind()处理端口相同的所有连接。
    # bind = ;

    # 标识符，设置会话连接使用SSL模式进行，此标识符和Nginx服务器提供的HTTPS服务有关。
    # ssl = ;

    ignore_invalid_headers off;

    access_log /var/log/nginx/host.access.log main;

    # underscores_in_headers on;

    # location 
    # "="，用于标准uri前，要求请求字符串与uri严格匹配。如果已经匹配成功，就停止继续向下搜索并立即处理此请求。
    # "^~"，用于标准uri前，要求Nginx服务器找到标识uri和请求字符串匹配度最高的location后，立即使用此location处理请求，而不再使用location块中的正则uri和请求字符串做匹配。
    # "~"，用于表示uri包含正则表达式，并且区分大小写。
    # "~*"，用于表示uri包含正则表达式，并且不区分大小写。注意如果uri包含正则表达式，就必须要使用"～"或者"~*"标识。

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
    }

    location /minio/ {
        rewrite ^/(.*) http://81.68.217.99:9001/ permanent;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}